# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
      - name: Run coverage
        run: sbt coverage test coverageReport
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: target/scala-2.13/scoverage-report
      - name: Post coverage summary
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'target/scala-2.13/scoverage-report/scoverage.xml';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              const match = report.match(/<statement-rate>(.*?)<\/statement-rate>/);
              if (match) {
                const coverage = match[1];
                const message = `Coverage Report: ${(coverage * 100).toFixed(2)}%`;
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: message
                });
              } else {
                console.error('Coverage rate not found in the report.');
              }
            } else {
              console.error('Coverage report file not found.');
            }